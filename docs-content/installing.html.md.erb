---
title: Installing and Configuring Splunk Firehose Nozzle for PCF
owner: Partners
---

This topic describes how to install and configure Splunk Firehose Nozzle for PCF.

##<a id='install'></a> Install and Configure Splunk Firehose Nozzle for PCF

###Prerequisites
+ For information about the Ops Manager Installation Dashboard, see [Using Ops Manager](http://docs.pivotal.io/pivotalcf/1-11/customizing/).
+ There is no upgrade path from the previous release of Splunk Nozzle for PCF (Beta). Install this version to an environment without the Splunk Firehose Nozzle for PCF (Beta).

###Steps

1. Download the Splunk file from [Pivotal Network](https://network.pivotal.io/products/splunk-nozzle/).

1. Navigate to the Ops Manager Installation Dashboard and click **Import a Product** to
upload the product file.

1. Click **Add** next to the uploaded Splunk Firehose Nozzle for PCF tile in the Ops
Manager **Available Products** view to add it to your staging area.

1. Click the newly added **Splunk Firehose Nozzle for PCF** tile.
![Report Example: Ops Manager Dashboard View](images/ops-manager-dashboard.png)


1. [Configure the tile](#configure) as described below.

1. Click **Save**.

1. Return to the Ops Manager Installation Dashboard and click **Apply Changes**
to install Splunk Firehose Nozzle for PCF tile.



##<a id='configure'></a> Configuration

1. Click Assign AZs and Networks**: Choose placement accordingly.

1. Click Splunk Settings:
    ![Report Example: Tile Splunk Settings](images/tile-splunk-settings.png)

Complete the fields as follows:

  * **HTTP Event Collector Endpoint (HEC) URL**: HTTP Event Collector endpoint URL.`<address>:<port>`, where `<address>` is either FQDN or IP address,
and `<port>` is the port on which Splunk HEC is listening.
  * **HTTP Event Collector (HEC) Token**: Splunk generated HEC token. [More Information](http://docs.splunk.com/Documentation/SplunkCloud/6.6.1/Data/UsetheHTTPEventCollector)
  * **Skip SSL validation**: Skip SSL certificate validation for connections to Splunk. Secure communications do not check SSL certificates against a trusted Certificate Authority.
Do not use for a production environment.
  * **Index**: The Splunk index that events are sent to.

<p class="note">**Warning:** Setting an invalid index will cause events to be lost. This index must match one of the selected indexes for the Splunk HTTP event collector token used for the HTTP Event Collector Token parameter.</p>


1. Click Cloud Foundry Settings**:
    ![Report Example: Cloud Foundry Settings View](images/tile-cf-settings.png)

Complete the fields as follows:

  * **API Endpoint**: Cloud Foundry API endpoint.
  * **API user/API password**: Splunk Nozzle's credentials. Best practice is providing a user with "Rotate, Repave, Repair"
  credentials, so that credentials can be easily deactivated, rotated, and have minimal access privileges.
  The Nozzle's user needs scopes `cloud_controller.admin_read_only` and `doppler.firehose` (older releases without
  `cloud_controller.admin_read_only` have to use `cloud_controller.admin`).

=======

  For Elastic Runtime versions later than v1.8.9 and v1.7.29, a `splunk-firehose` user is pre-created. Look up
  this user by:

  1. In the Elastic Runtime tile in Ops Manager, click the "Credentials" tab.
  1. In the UAA section, retrieve the **"Splunk Firehose Credentials"**

  Alternately operators can use the
  [uaac](https://github.com/cloudfoundry/cf-uaac) tool to create the appropriate user. The `uaac`
  commands to add a user are as follows:

  1. `uaac target https://uaa.[system domain url]`
  1. `uaac token client get admin -s [admin client credentials secret]`
  1. `uaac -t user add splunk-nozzle --password password123 --emails na`
  1. `uaac -t member add cloud_controller.admin_read_only splunk-nozzle`
  1. `uaac -t member add doppler.firehose splunk-nozzle`

  * **Skip SSL validation**: Skip SSL certificate validation for connections to Cloud Foundry. Secure communications do not check SSL certificates against a trusted Certificate Authority.
      Do not use for a production environment.
  * **Event Types**: Choose which events the nozzle forwards to the Splunk indexer(s).For more information about the following events, see
  [dropsonde-protocol](https://github.com/cloudfoundry/dropsonde-protocol/tree/master/events)

      * HttpStartStop
      * LogMessage
      * ValueMetric
      * CounterEvent
      * Error
      * ContainerMetric



**4. Advanced**
    ![Report Example: Cloud Foundry Settings View](images/tile-advanced-settings.png)

  * **Scale Out Nozzle**: Scale out Splunk Nozzle. Splunk recommends running two or more nozzles for high availability.
  * **Firehose Subscription ID**: The Loggregator does a round-robin of events across connections
  having the same ID. An operator would only need to change this if some other connection
  is also using the default value.
  * **Additional Fields**: Arbitrary set of key:value pairs in the form `key1:value1,key2:value2,key3:value3` that do not occur in event payload itself.
  These fields are indexed with every event payload, and are used as metadata for indexing and searching.
  One situation in which this might be useful is differentiating logs from multiple foundations going into the same Splunk Enterprise index.
  * **Add App Information**: When true, the nozzle calls back to the Cloud Foundry API and queries events that
  have an app GUID to add additional information, such as app name, space name, space GUID, organization name,
  organization GUID. This causes a one-time load increase on the API machines proportional the number of running apps,
  because each Nozzle populates a cache of app metadata.
  * **Enable Event Tracing**: Enables event trace logging. Splunk events now contain a UUID, Splunk Nozzle Event Counts, and a Subscription-ID for Splunk correlation searches.

**5. Resource Config**: Select default options.

**6. Stemcell**: Ensure the proper stemcell is available.
